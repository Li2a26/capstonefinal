{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card\"\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-body\"\n}, [/*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"card-title\"\n}, \"Card title\"), /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"card-text\"\n}, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"#!\",\n  class: \"btn btn-primary\"\n}, \"Button\")], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 0,\n  class: \"flex-container row row-cols-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CardComp = _resolveComponent(\"CardComp\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filteredProducts, product => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: product.productID\n    }, [_createElementVNode(\"img\", {\n      src: product.productUrl,\n      alt: \"Product Image\",\n      class: \"product-image\"\n    }, null, 8 /* PROPS */, _hoisted_2), _hoisted_3]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"p\", null, \"Quantity: \" + _toDisplayString(_ctx.product.quantity), 1 /* TEXT */)]), $options.products ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_CardComp, {\n    products: $options.products\n  }, null, 8 /* PROPS */, [\"products\"])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","href","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","filteredProducts","product","key","productID","src","productUrl","alt","_hoisted_3","_toDisplayString","_ctx","quantity","$options","products","_hoisted_4","_createVNode","_component_CardComp"],"sources":["C:\\Users\\Student\\CapstoneB\\capstonefinal\\frontend\\src\\views\\ProductsView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div class=\"card\">\r\n        <div v-for=\"product in filteredProducts\" :key=\"product.productID\">\r\n      <img :src=\"product.productUrl\" alt=\"Product Image\" class=\"product-image\" />\r\n  <div class=\"card-body\">\r\n    <h5 class=\"card-title\">Card title</h5>\r\n    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n    <a href=\"#!\" class=\"btn btn-primary\">Button</a>\r\n  </div>\r\n</div>\r\n  \r\n\r\n\r\n  <p>Quantity: {{ product.quantity }}</p>\r\n    </div>\r\n    \r\n\r\n    <div v-if=\"products\" class=\"flex-container row row-cols-3\">\r\n        <CardComp :products=\"products\" />\r\n    </div>\r\n\r\n  </div>\r\n\r\n</template>\r\n<script>\r\n\r\nimport LoadingSpinner from '@/components/LoadingSpinner.vue';\r\nimport CardComp from '@/components/CardComp.vue';\r\nexport default {\r\n\r\n    data() {\r\n    return {\r\n      selectedCategory: \"\", // Holds the selected category\r\n      filteredProducts: [], // Holds the filtered products\r\n      categories: [\"Bag\", \"Flag\", \"T-SHIRT\",],\r\n      searchQuery: \"\",\r\n      sortOrder: \"asc\",\r\n      isLoading: true,\r\n    };\r\n  },\r\n\r\n    computed: {\r\n        products() {\r\n            return this.$store.state.products\r\n            \r\n        }\r\n    },\r\n    methods: {\r\n\r\n    filter() {\r\n      this.filteredProducts = this.products.filter(product => {\r\n        return this.selectedCategory === \"\" || product.category === this.selectedCategory;\r\n      });\r\n    },\r\n\r\n    performSearch() {\r\n    this.filteredProducts = this.products.filter(product => {\r\n      const productName = product.prodName.toLowerCase();\r\n      return productName.includes(this.searchQuery.toLowerCase());\r\n    });\r\n  },\r\n  sortProducts() {\r\n    this.products.sort((a, b) => {\r\n      if (this.sortOrder === \"asc\") {\r\n        return a.amount - b.amount;\r\n      } else {\r\n        return b.amount - a.amount;\r\n      }\r\n    });\r\n\r\n    // If products are currently being filtered, update the filteredProducts array\r\n    if (this.selectedCategory || this.searchQuery) {\r\n      this.filter();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  },\r\n\r\n  mounted() {\r\n    this.$store.dispatch(\"getProducts\").then(() => {\r\n      this.products = this.$store.state.products;\r\n    });\r\n  },\r\n    components: {CardComp,  LoadingSpinner},\r\n}\r\n</script>\r\n<style>\r\n\r\n</style>"],"mappings":";;EAEWA,KAAK,EAAC;AAAM;;gCAGrBC,mBAAA,CAIM;EAJDD,KAAK,EAAC;AAAW,I,aACpBC,mBAAA,CAAsC;EAAlCD,KAAK,EAAC;AAAY,GAAC,YAAU,G,aACjCC,mBAAA,CAAuH;EAApHD,KAAK,EAAC;AAAW,GAAC,gGAA8F,G,aACnHC,mBAAA,CAA+C;EAA5CC,IAAI,EAAC,IAAI;EAACF,KAAK,EAAC;GAAkB,QAAM,E;;;EAUtBA,KAAK,EAAC;;;;uBAjB3BG,mBAAA,CAqBI,cApBFF,mBAAA,CAaI,OAbJG,UAaI,I,kBAZFD,mBAAA,CAOFE,SAAA,QAAAC,WAAA,CAPyBC,KAAA,CAAAC,gBAAgB,EAA3BC,OAAO;yBAAnBN,mBAAA,CAOF;MAP4CO,GAAG,EAAED,OAAO,CAACE;QACzDV,mBAAA,CAA2E;MAArEW,GAAG,EAAEH,OAAO,CAACI,UAAU;MAAEC,GAAG,EAAC,eAAe;MAACd,KAAK,EAAC;yCAC7De,UAIM,C;kCAKNd,mBAAA,CAAuC,WAApC,YAAU,GAAAe,gBAAA,CAAGC,IAAA,CAAAR,OAAO,CAACS,QAAQ,iB,GAInBC,QAAA,CAAAC,QAAQ,I,cAAnBjB,mBAAA,CAEM,OAFNkB,UAEM,GADFC,YAAA,CAAiCC,mBAAA;IAAtBH,QAAQ,EAAED,QAAA,CAAAC;EAAQ,sC"},"metadata":{},"sourceType":"module","externalDependencies":[]}