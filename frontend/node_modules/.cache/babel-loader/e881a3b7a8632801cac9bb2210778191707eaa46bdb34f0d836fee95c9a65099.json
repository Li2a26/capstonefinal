{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, \" div.d-fle \");\n}","map":{"version":3,"names":["_createElementBlock"],"sources":["C:\\Users\\Student\\CapstoneB\\capstonefinal\\frontend\\src\\components\\CardComp.vue"],"sourcesContent":["\r\n<template>\r\n  <div>\r\ndiv.d-fle\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: [\"products\"],\r\n  data() {\r\n    return {\r\n      searchQuery: \"\",\r\n      ascending: true,\r\n      descending: false,\r\n    };\r\n  },\r\n  computed: {\r\n    filteredAndSortedProducts() {\r\n      let filteredProducts = this.$store.state.products || [];\r\n\r\n      // Filter by search query\r\n      if (this.searchQuery) {\r\n        const searchQuery = this.searchQuery.toLowerCase();\r\n        filteredProducts = filteredProducts.filter((product) =>\r\n          product.productNAME.toLowerCase().includes(searchQuery)\r\n        );\r\n      }\r\n\r\n      // Sort by price\r\n      if (this.ascending) {\r\n        filteredProducts.sort((a, b) => a.productPRICE - b.productPRICE);\r\n      } else if (this.descending) {\r\n        filteredProducts.sort((a, b) => b.productPRICE - a.productPRICE);\r\n      }\r\n\r\n      return filteredProducts;\r\n    },\r\n  },\r\n  methods: {\r\n    sortProducts() {\r\n      this.ascending = true;\r\n      this.descending = false;\r\n    },\r\n    sortProducts2() {\r\n      this.ascending = false;\r\n      this.descending = true;\r\n    },\r\n    addToCart(prodID) {\r\n      // Ensure the user is logged in\r\n      if (this.userData && this.userData.userID) {\r\n        // Call the addToCart action with userID and prodID\r\n        this.$store.dispatch(\"addToCart\", {\r\n          userID: this.userData.userID,\r\n          prodID,\r\n        });\r\n      } else {\r\n        // Handle the case where the user is not logged in, prompt for login, etc.\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* .card-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n} */\r\n\r\n.product-card {\r\n  margin-bottom: 20px; /* Add margin for spacing between cards */\r\n  box-sizing: border-box;\r\n  width: 400px !important;\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n}\r\n</style>\r\n\r\n  <style scoped>\r\n/* .card-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n} */\r\n\r\n\r\n\r\n</style>\r\n  "],"mappings":";;uBAEEA,mBAAA,CAEM,aAFD,aAEL"},"metadata":{},"sourceType":"module","externalDependencies":[]}