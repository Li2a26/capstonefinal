{"ast":null,"code":"export default {\n  computed: {\n    products() {\n      return this.$store.state.products;\n    }\n  },\n  mounted() {\n    this.$store.dispatch(\"getProducts\");\n  },\n  methods: {\n    async deleteProduct(productId) {\n      const success = await this.$store.dispatch(\"deleteProduct\", productId);\n      if (success) {\n        // Update the product list in your component if needed.\n        this.$store.dispatch(\"getProducts\"); // You can dispatch this if you need to refresh the product list.\n      } else {\n        alert(\"Failed to delete product. Please try again.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["computed","products","$store","state","mounted","dispatch","methods","deleteProduct","productId","success","alert"],"sources":["C:\\Users\\Student\\CapstoneB\\capstonefinal\\frontend\\src\\components\\ProductTable.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"body\" v-if=\"products\">\r\n      <div class=\"row table-container\">\r\n        <div class=\"col-12\">\r\n          <h1>PRODUCTS</h1>\r\n          <button class=\"addp\">\r\n            <router-link to=\"/admin/add/product\" class=\"bb\"> Add Product </router-link>\r\n          </button>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table is-striped is-bordered mt-2 is-fullwidth text-align-center\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Image</th>\r\n                  <th>Product Name</th>\r\n                  <th>Price</th>\r\n                  <th>Description</th>\r\n                  <th>Edit/Delete</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"product in products\" :key=\"product.productID\" class=\"boredom\">\r\n                  <td>{{ product.productID }}</td>\r\n                  <td><img class=\"tableImg\" :src=\"product.productUrl\" alt=\"\" /></td>\r\n                  <td>{{ product.productNAME }}</td>\r\n                  <td>R {{ product.productPRICE }}</td>\r\n                  <td>{{ product.productDESC }}</td>\r\n                  <td>\r\n                    <button\r\n                      type=\"submit\"\r\n                      class=\"btn btton\"\r\n                      @click=\"deleteProduct(product.productID)\"\r\n                      id=\"delete-row\"\r\n                    >\r\n                      üóëÔ∏è\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      class=\"btn btton\"\r\n                      @click=\"editProduct(product.productID)\"\r\n                      id=\"add-row\"\r\n                    >\r\n                      ‚úèÔ∏è\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-else class=\"d-flex justify-content-center mb-3\">\r\n      <div class=\"loader\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  computed: {\r\n    products() {\r\n      return this.$store.state.products;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.$store.dispatch(\"getProducts\");\r\n  },\r\n  methods: {\r\n    async deleteProduct(productId) {\r\n      const success = await this.$store.dispatch(\"deleteProduct\", productId);\r\n\r\n      if (success) {\r\n        // Update the product list in your component if needed.\r\n        this.$store.dispatch(\"getProducts\"); // You can dispatch this if you need to refresh the product list.\r\n      } else {\r\n        alert(\"Failed to delete product. Please try again.\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.tableImg {\r\n  width: 85px;\r\n}\r\n.addp {\r\n  background-color: #d914e7;\r\n  border-radius: 20px;\r\n  color: black !important;\r\n}\r\n.addp:hover {\r\n  background-color: pink;\r\n}\r\n.bb {\r\n  color: black;\r\n}\r\n\r\n.loader {\r\n  border: 7px solid #fff9e4; /* Light grey */\r\n  border-top: 7px solid #e587ec; /* Blue */\r\n  border-radius: 50%;\r\n  width: 35px;\r\n  height: 35px;\r\n  animation: spin 2s linear infinite;\r\n}\r\n.tableImg {\r\n  width: 85px;\r\n}\r\n.addp {\r\n  background-color: #d914e7;\r\n  border-radius: 20px;\r\n  color: black !important;\r\n}\r\n.addp:hover {\r\n  background-color: pink;\r\n}\r\n.bb {\r\n  color: black;\r\n}\r\n\r\n.loader {\r\n  border: 7px solid #fff9e4; /* Light grey */\r\n  border-top: 7px solid #e587ec; /* Blue */\r\n  border-radius: 50%;\r\n  width: 35px;\r\n  height: 35px;\r\n  animation: spin 2s linear infinite;\r\n}\r\n\r\n/* Set the light purple background color for the table container */\r\n\r\n\r\n\r\n/* Make table borders pink */\r\ntable.table {\r\n  border: 2px solid pink;\r\n  width:90%;\r\n}\r\n\r\n/* Style table header */\r\ntable.table thead {\r\n  background-color: pink;\r\n  color: white;\r\n}\r\n\r\n@media screen and (max-width: 576px) {\r\n  /* Apply responsive styles for small screens here */\r\n  .table-container {\r\n    overflow-x: auto; /* Enable horizontal scrolling on small screens */\r\n  }\r\n\r\n  /* Make table borders pink */\r\n  table.table {\r\n    border: 2px solid pink;\r\n  }\r\n  \r\n  /* Style table header */\r\n  table.table thead {\r\n    background-color: pink;\r\n    color: white;\r\n  }\r\n}\r\n\r\n</style>\r\n"],"mappings":"AA8DA,eAAe;EACbA,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,QAAQ;IACnC;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,aAAa,CAAC;EACrC,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAACC,SAAS,EAAE;MAC7B,MAAMC,OAAM,GAAI,MAAM,IAAI,CAACP,MAAM,CAACG,QAAQ,CAAC,eAAe,EAAEG,SAAS,CAAC;MAEtE,IAAIC,OAAO,EAAE;QACX;QACA,IAAI,CAACP,MAAM,CAACG,QAAQ,CAAC,aAAa,CAAC,EAAE;MACvC,OAAO;QACLK,KAAK,CAAC,6CAA6C,CAAC;MACtD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}