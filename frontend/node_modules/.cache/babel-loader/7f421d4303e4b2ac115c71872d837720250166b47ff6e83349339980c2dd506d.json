{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport LoadingSpinner from '@/components/LoadingSpinner.vue';\nexport default {\n  computed: {\n    product() {\n      return this.$store.state.product;\n    },\n    id() {\n      return this.$route.params.id;\n    },\n    userData() {\n      return this.$store.state.userData;\n    }\n  },\n  mounted() {\n    this.$store.dispatch(\"getProduct\", this.id);\n  },\n  methods: {\n    addToCart(product) {\n      // Ensure the user is logged in\n      this.$store.dispatch('addToCart', product);\n      Swal.fire({\n        icon\n      });\n    },\n    async addToCartProduct() {\n      try {\n        const userDataJSON = localStorage.getItem(\"userData\");\n        if (userDataJSON) {\n          const userData = JSON.parse(userDataJSON);\n          const userID = userData.result.userID;\n          const product = {\n            prodID: this.product.prodID,\n            userID: userID\n          };\n          const existingProductIndex = this.$store.state.cart.findIndex(item => item.prodID === product.prodID);\n          if (existingProductIndex !== -1) {\n            const existingProduct = this.$store.state.cart[existingProductIndex];\n            await this.$store.dispatch(\"updateCartItem\", {\n              index: existingProductIndex,\n              newQuantity: existingProduct.quantity + this.quantity\n            });\n          } else {\n            product.quantity = this.quantity;\n            await this.$store.dispatch(\"addToCart\", product);\n          }\n          await this.$store.dispatch(\"getCart\");\n          Swal.fire({\n            icon: \"success\",\n            title: \"Added to Cart\",\n            text: \"The product has been added to your cart.\"\n          });\n        } else {\n          console.error(\"User data not found in localStorage.\");\n        }\n      } catch (error) {\n        console.error(\"Error adding to cart:\", error);\n        Swal.fire({\n          icon: \"error\",\n          title: \"Error\",\n          text: \"An error occurred while adding the product to your cart.\"\n        });\n      }\n    },\n    getAllProductValues() {\n      const cartItems = this.$store.state.cart;\n      const allProductValues = [];\n      cartItems.forEach(item => {\n        const product = {\n          prodID: item.prodID,\n          userID: userID\n        };\n        allProductValues.push(product);\n      });\n      console.log(\"All Product Values:\", allProductValues);\n    }\n  },\n  async created() {\n    const prodID = this.$route.params.prodID;\n    try {\n      await this.$store.dispatch(\"getProduct\", prodID);\n    } catch (error) {\n      this.error = \"Product not found\";\n    }\n  },\n  components: {\n    LoadingSpinner\n  }\n};","map":{"version":3,"names":["LoadingSpinner","computed","product","$store","state","id","$route","params","userData","mounted","dispatch","methods","addToCart","Swal","fire","icon","addToCartProduct","userDataJSON","localStorage","getItem","JSON","parse","userID","result","prodID","existingProductIndex","cart","findIndex","item","existingProduct","index","newQuantity","quantity","title","text","console","error","getAllProductValues","cartItems","allProductValues","forEach","push","log","created","components"],"sources":["C:\\Users\\Student\\CapstoneB\\capstonefinal\\frontend\\src\\views\\ProductView.vue"],"sourcesContent":["\r\n   <template>\r\n  <div v-if=\"product\" class=\"product_details\" :key=\"product.productID\" :product=\"product\">\r\n    <div class=\"card mx-auto\" id=\"that\">\r\n      <div class=\"container text-center\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-6 col-md-5 col-lg-6\">\r\n            <img class=\"image\" :src=\"product.productUrl\" :alt=\"product.productNAME\" />\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-5 offset-md-2 col-lg-6 offset-lg-0\">\r\n            <p class=\"fs-4\">{{ product.productNAME }}</p>\r\n            <div class=\"card-body m-2\">\r\n              <p>{{ product.productDESC }}</p>\r\n              <p>R {{ product.productPRICE }}</p>\r\n              <!-- <p>Quantity: {{ product.quantity }} In Stock</p> -->\r\n              <button @click=\"addToCart(product)\">Add to Cart</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <loading-spinner v-else />\r\n</template>\r\n\r\n  <script>\r\n  import LoadingSpinner from '@/components/LoadingSpinner.vue'\r\n  \r\n  export default {\r\n    computed: {\r\n      product() {\r\n        return this.$store.state.product\r\n      },\r\n      id() {\r\n        return this.$route.params.id\r\n      },\r\n      userData() {\r\n      return this.$store.state.userData;\r\n    },\r\n    },\r\n    mounted() {\r\n      this.$store.dispatch(\"getProduct\", this.id)\r\n    },\r\n    methods: {\r\n        addToCart(product) {\r\n      // Ensure the user is logged in\r\n      this.$store.dispatch('addToCart', product);\r\n      Swal.fire({\r\n        icon\r\n      })\r\n    },\r\n    async addToCartProduct() {\r\n  try {\r\n    const userDataJSON = localStorage.getItem(\"userData\");\r\n    if (userDataJSON) {\r\n      const userData = JSON.parse(userDataJSON);\r\n      const userID = userData.result.userID;\r\n      const product = {\r\n        prodID: this.product.prodID,\r\n        userID: userID,\r\n      };\r\n      const existingProductIndex = this.$store.state.cart.findIndex(\r\n        (item) => item.prodID === product.prodID\r\n      );\r\n      if (existingProductIndex !== -1) {\r\n        const existingProduct = this.$store.state.cart[existingProductIndex];\r\n        await this.$store.dispatch(\"updateCartItem\", {\r\n          index: existingProductIndex,\r\n          newQuantity: existingProduct.quantity + this.quantity,\r\n        });\r\n      } else {\r\n        product.quantity = this.quantity;\r\n        await this.$store.dispatch(\"addToCart\", product);\r\n      }\r\n      await this.$store.dispatch(\"getCart\");\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        title: \"Added to Cart\",\r\n        text: \"The product has been added to your cart.\",\r\n      });\r\n    } else {\r\n      console.error(\"User data not found in localStorage.\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error adding to cart:\", error);\r\n    Swal.fire({\r\n      icon: \"error\",\r\n      title: \"Error\",\r\n      text: \"An error occurred while adding the product to your cart.\",\r\n    });\r\n  }\r\n},\r\n    getAllProductValues() {\r\n      const cartItems = this.$store.state.cart;\r\n      const allProductValues = [];\r\n      cartItems.forEach((item) => {\r\n        const product = {\r\n          prodID: item.prodID,\r\n          userID: userID,\r\n        };\r\n        allProductValues.push(product);\r\n      });\r\n      console.log(\"All Product Values:\", allProductValues);\r\n    },\r\n  },\r\n  async created() {\r\n    const prodID = this.$route.params.prodID;\r\n    try {\r\n      await this.$store.dispatch(\"getProduct\", prodID);\r\n    } catch (error) {\r\n      this.error = \"Product not found\";\r\n    }\r\n    },\r\n    components: { LoadingSpinner },\r\n  }\r\n  </script>\r\n<style scoped>\r\n\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}