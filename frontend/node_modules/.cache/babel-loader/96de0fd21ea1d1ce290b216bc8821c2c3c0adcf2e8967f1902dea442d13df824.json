{"ast":null,"code":"// import axios from 'axios'\nimport LoadingSpinner from '@/components/LoadingSpinner.vue';\nexport default {\n  // props: [\"products\"],\n  components: {\n    lo\n  },\n  computed: {\n    products() {\n      return this.$store.state.products;\n    }\n    // userRole() {\n    //   return this.$store.state.userRole;\n    // },\n  },\n\n  mounted() {\n    this.$store.dispatch(\"getProducts\");\n  },\n  methods: {\n    async deleteProduct(productId) {\n      const success = await this.$store.dispatch('deleteProduct', productId);\n      if (success) {\n        // Update the product list in your component if needed.\n        this.$store.dispatch('getProducts'); // You can dispatch this if you need to refresh the product list.\n      } else {\n        alert('Failed to delete product. Please try again.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["LoadingSpinner","components","lo","computed","products","$store","state","mounted","dispatch","methods","deleteProduct","productId","success","alert"],"sources":["C:\\Users\\Student\\CapstoneB\\capstonefinal\\frontend\\src\\components\\ProductTable.vue"],"sourcesContent":["<template>\r\n    <div >\r\n      <div class=\"body\" v-if=\"products\">\r\n        <div class=\"row table-container\">\r\n          <div class=\"col-12\">\r\n            <h1>PRODUCTS</h1>\r\n            <button class=\"addp\">\r\n              <router-link to=\"/admin/add/product\" class=\"bb\"> Add Product </router-link>\r\n            </button>\r\n          </div>\r\n          <div class=\"col\">\r\n            <table class=\"table is-striped is-bordered mt-2 is-fullwidth  text-align-center\" @submit=\"deleteProduct\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Image</th>\r\n                  <th>Product Name</th>\r\n                  <th>Price</th>\r\n                  <th>Description</th>\r\n                  <th>Edit/Delete</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"product in products\" :key=\"product.productID\" class=\"boredom\">\r\n                  <td>{{ product.productID }}</td>\r\n                  <td><img class=\"tableImg\" :src=\"product.productUrl\" alt=\"\" /></td>\r\n                  <td>{{ product.productNAME }}</td>\r\n                  <td>R {{ product.productPRICE }}</td>\r\n                  <td>{{ product.productDESC }}</td>\r\n                  <td>\r\n                    <!-- Edit link, you can uncomment it when needed -->\r\n                    <!-- <button>\r\n                      <router-link :to=\"{ name: 'admin edit product', params: { id : product.prodID } }\"> Edit </router-link>\r\n                    </button> -->\r\n                    <button\r\n                      type=\"submit\"\r\n                      class=\"btn btton\"\r\n                      @click=\"deleteProduct(product.productID)\"\r\n                      id=\"delete-row\"\r\n                    >\r\n                      üóëÔ∏è\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      class=\"btn btton\"\r\n                      @click=\"editProduct(product.productID)\"\r\n                      id=\"add-row\"\r\n                    >\r\n                      ‚úèÔ∏è\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <loading-spinner v-else />\r\n    </div>\r\n  </template>\r\n  \r\n  \r\n  <script>\r\n  \r\n  // import axios from 'axios'\r\n  import LoadingSpinner from '@/components/LoadingSpinner.vue';\r\n  export default {\r\n  // props: [\"products\"],\r\n  components: {\r\n    lo\r\n  },\r\n  computed: {\r\n  products() {\r\n    return this.$store.state.products\r\n  },\r\n  // userRole() {\r\n  //   return this.$store.state.userRole;\r\n  // },\r\n},\r\n  \r\n  mounted() {\r\n  this.$store.dispatch(\"getProducts\")\r\n  },\r\n  methods: {\r\n  async deleteProduct(productId) {\r\n    const success = await this.$store.dispatch('deleteProduct', productId);\r\n\r\n    if (success) {\r\n      // Update the product list in your component if needed.\r\n      this.$store.dispatch('getProducts'); // You can dispatch this if you need to refresh the product list.\r\n    } else {\r\n      alert('Failed to delete product. Please try again.');\r\n    }\r\n  },\r\n},\r\n  \r\n  \r\n  };\r\n  \r\n  \r\n  \r\n  \r\n  </script>\r\n  \r\n  <style scoped>\r\n  .tableImg{\r\n      width : 85px;\r\n  }\r\n  .addp {\r\n    background-color:#d914e7;\r\n  border-radius: 20px; \r\n  color: black !important;\r\n}\r\n.addp:hover {\r\n  background-color: pink;\r\n}\r\n.bb {\r\n  color: black;\r\n}\r\n  \r\n  </style>"],"mappings":"AAgEE;AACA,OAAOA,cAAa,MAAO,iCAAiC;AAC5D,eAAe;EACf;EACAC,UAAU,EAAE;IACVC;EACF,CAAC;EACDC,QAAQ,EAAE;IACVC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,QAAO;IAClC;IACA;IACA;IACA;EACF,CAAC;;EAECG,OAAOA,CAAA,EAAG;IACV,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,aAAa;EAClC,CAAC;EACDC,OAAO,EAAE;IACT,MAAMC,aAAaA,CAACC,SAAS,EAAE;MAC7B,MAAMC,OAAM,GAAI,MAAM,IAAI,CAACP,MAAM,CAACG,QAAQ,CAAC,eAAe,EAAEG,SAAS,CAAC;MAEtE,IAAIC,OAAO,EAAE;QACX;QACA,IAAI,CAACP,MAAM,CAACG,QAAQ,CAAC,aAAa,CAAC,EAAE;MACvC,OAAO;QACLK,KAAK,CAAC,6CAA6C,CAAC;MACtD;IACF;EACF;AAGE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}