{"ast":null,"code":"import LoadingSpinner from \"@/components/LoadingSpinner.vue\";\nexport default {\n  props: [\"users\"],\n  computed: {\n    users() {\n      return this.$store.state.users;\n    }\n  },\n  mounted() {\n    this.$store.dispatch(\"getUsers\");\n  },\n  methods: {\n    async deleteUser(userID) {\n      const success = await this.$store.dispatch(\"deleteUser\", userID);\n      if (success) {\n        // Update the user list in your component if needed.\n        this.$store.dispatch(\"getUsers\"); // You can dispatch this if you need to refresh the user list.\n      } else {\n        alert(\"Failed to delete USER. Please try again.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["LoadingSpinner","props","computed","users","$store","state","mounted","dispatch","methods","deleteUser","userID","success","alert"],"sources":["C:\\Users\\Student\\CapstoneB\\capstonefinal\\frontend\\src\\components\\UserTable.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"body mx-3\" v-if=\"users\">\r\n      <div class=\"row table-container\">\r\n        <div class=\"col-12\">\r\n          <h1>USERS</h1>\r\n          <button class=\"addu\">\r\n            <router-link to=\"/admin/add/user\" class=\"bb\"> Add User </router-link>\r\n          </button>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table is-striped is-bordered mt-2 is-fullwidth text-align-center\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>IMAGE</th>\r\n                  <th>NAME</th>\r\n                  <th>SURNAME</th>\r\n                  <th>EMAIL</th>\r\n                  <th>ROLE</th>\r\n                  <th>DELETE/EDIT</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"user in users\" :key=\"user.userID\" class=\"boredom\">\r\n                  <td>{{ user.userID }}</td>\r\n                  <td><img class=\"tableImg\" :src=\"user.profileUrl\" alt=\"\" /></td>\r\n                  <td>{{ user.firstName }}</td>\r\n                  <td>{{ user.lastName }}</td>\r\n                  <td>{{ user.emailAdd }}</td>\r\n                  <td>{{ user.userRole }}</td>\r\n                  <td>\r\n                    <button\r\n                      type=\"submit\"\r\n                      class=\"btn btton\"\r\n                      @click=\"deleteUser(user.userID)\"\r\n                      id=\"delete-row\"\r\n                    >\r\n                      üóëÔ∏è\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      class=\"btn btton\"\r\n                      @click=\"editUser(user.userID)\"\r\n                      id=\"edit-row\"\r\n                    >\r\n                      ‚úèÔ∏è\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-else class=\"d-flex justify-content-center mb-3\">\r\n      <div class=\"loader\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LoadingSpinner from \"@/components/LoadingSpinner.vue\";\r\n\r\nexport default {\r\n  props: [\"users\"],\r\n  computed: {\r\n    users() {\r\n      return this.$store.state.users;\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.$store.dispatch(\"getUsers\");\r\n  },\r\n\r\n  methods: {\r\n    async deleteUser(userID) {\r\n      const success = await this.$store.dispatch(\"deleteUser\", userID);\r\n\r\n      if (success) {\r\n        // Update the user list in your component if needed.\r\n        this.$store.dispatch(\"getUsers\"); // You can dispatch this if you need to refresh the user list.\r\n      } else {\r\n        alert(\"Failed to delete USER. Please try again.\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.tableImg {\r\n  width: 120px;\r\n  height: auto;\r\n}\r\n.addu {\r\n  background-color: #d914e7;\r\n  border-radius: 20px;\r\n  color: black !important;\r\n}\r\n.addu:hover {\r\n  background-color: pink;\r\n}\r\n.bb {\r\n  color: black;\r\n}\r\n.btn {\r\n  border-radius: 20px;\r\n}\r\n\r\n/* Style the table with pink borders and light purple background */\r\ntable.table {\r\n  border: 2px solid pink;\r\n  background-color: #f0e1f8; /* Light purple */\r\n}\r\n\r\n/* Style table header */\r\ntable.table thead {\r\n  background-color: pink;\r\n  color: white;\r\n}\r\n\r\n/* Add spaces at the sides of the table container */\r\n.table-container {\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n}\r\n\r\n.loader {\r\n  border: 7px solid #fff9e4; /* Light grey */\r\n  border-top: 7px solid #e587ec; /* Blue */\r\n  border-radius: 50%;\r\n  width: 35px;\r\n  height: 35px;\r\n  animation: spin 2s linear infinite;\r\n}\r\n\r\n@media screen and (max-width: 576px) {\r\n  /* Apply responsive styles for small screens here */\r\n  .table-container {\r\n    overflow-x: auto; /* Enable horizontal scrolling on small screens */\r\n  }\r\n\r\n  /* Make table borders pink */\r\n  table.table {\r\n    border: 2px solid pink;\r\n  }\r\n\r\n  /* Style table header */\r\n  table.table thead {\r\n    background-color: pink;\r\n    color: white;\r\n  }\r\n}\r\n</style>\r\n\r\n"],"mappings":"AAgEA,OAAOA,cAAa,MAAO,iCAAiC;AAE5D,eAAe;EACbC,KAAK,EAAE,CAAC,OAAO,CAAC;EAChBC,QAAQ,EAAE;IACRC,KAAKA,CAAA,EAAG;MACN,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,KAAK;IAChC;EACF,CAAC;EAEDG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,UAAU,CAAC;EAClC,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAACC,MAAM,EAAE;MACvB,MAAMC,OAAM,GAAI,MAAM,IAAI,CAACP,MAAM,CAACG,QAAQ,CAAC,YAAY,EAAEG,MAAM,CAAC;MAEhE,IAAIC,OAAO,EAAE;QACX;QACA,IAAI,CAACP,MAAM,CAACG,QAAQ,CAAC,UAAU,CAAC,EAAE;MACpC,OAAO;QACLK,KAAK,CAAC,0CAA0C,CAAC;MACnD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}